/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as Exceptions404RouteImport } from './routes/exceptions/404'
import { Route as Exceptions401RouteImport } from './routes/exceptions/401'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthenticatedCurrentRouteImport } from './routes/_authenticated/current'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const Exceptions404Route = Exceptions404RouteImport.update({
  id: '/exceptions/404',
  path: '/exceptions/404',
  getParentRoute: () => rootRouteImport,
} as any)
const Exceptions401Route = Exceptions401RouteImport.update({
  id: '/exceptions/401',
  path: '/exceptions/401',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedCurrentRoute = AuthenticatedCurrentRouteImport.update({
  id: '/current',
  path: '/current',
  getParentRoute: () => AuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/current': typeof AuthenticatedCurrentRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/exceptions/401': typeof Exceptions401Route
  '/exceptions/404': typeof Exceptions404Route
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/current': typeof AuthenticatedCurrentRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/exceptions/401': typeof Exceptions401Route
  '/exceptions/404': typeof Exceptions404Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/current': typeof AuthenticatedCurrentRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/exceptions/401': typeof Exceptions401Route
  '/exceptions/404': typeof Exceptions404Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/current'
    | '/auth/login'
    | '/auth/signup'
    | '/exceptions/401'
    | '/exceptions/404'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/current'
    | '/auth/login'
    | '/auth/signup'
    | '/exceptions/401'
    | '/exceptions/404'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/current'
    | '/auth/login'
    | '/auth/signup'
    | '/exceptions/401'
    | '/exceptions/404'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  Exceptions401Route: typeof Exceptions401Route
  Exceptions404Route: typeof Exceptions404Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/exceptions/404': {
      id: '/exceptions/404'
      path: '/exceptions/404'
      fullPath: '/exceptions/404'
      preLoaderRoute: typeof Exceptions404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/exceptions/401': {
      id: '/exceptions/401'
      path: '/exceptions/401'
      fullPath: '/exceptions/401'
      preLoaderRoute: typeof Exceptions401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/current': {
      id: '/_authenticated/current'
      path: '/current'
      fullPath: '/current'
      preLoaderRoute: typeof AuthenticatedCurrentRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedCurrentRoute: typeof AuthenticatedCurrentRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedCurrentRoute: AuthenticatedCurrentRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  Exceptions401Route: Exceptions401Route,
  Exceptions404Route: Exceptions404Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
